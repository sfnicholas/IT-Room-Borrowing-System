
package IA;


import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author shufa
 */
public class returnBorrowPage extends javax.swing.JFrame {

    /**
     * Creates new form reutrnBorrowPage
     */
    public returnBorrowPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldBorrowId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldUserId = new javax.swing.JTextField();
        jButtonBorrow = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldFeedback = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setText("Return equipment ID:");

        jTextFieldBorrowId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBorrowIdActionPerformed(evt);
            }
        });

        jLabel9.setText("User ID:");

        jTextFieldUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUserIdActionPerformed(evt);
            }
        });

        jButtonBorrow.setText("Return");
        jButtonBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrowActionPerformed(evt);
            }
        });

        jButtonBack.setText("Main Page");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabel10.setText("Any Feedback?");

        jTextFieldFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFeedbackActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Report Damage");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jTextFieldBorrowId, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jButtonBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 122, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBorrowId, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBorrowIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBorrowIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBorrowIdActionPerformed

    private void jTextFieldUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUserIdActionPerformed

    }//GEN-LAST:event_jTextFieldUserIdActionPerformed

    private void jButtonBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrowActionPerformed

        try{
            String userNameValue = jTextFieldUserId.getText();
            String borrowId = jTextFieldBorrowId.getText();
            Connection myCon = DriverManager.getConnection("jdbc:mysql://localhost:3306/borrowrecord","myuser","1222");
            Statement myStmt;
            myStmt = myCon.createStatement();
            
            int activateKey = 0;
            String dateEnd = null;
            int recordId = 0;
            int userId = 0;
            ResultSet myRs5= myStmt.executeQuery("select recordId ,equipmentId, userId, dateEnd from borrowRecord where "
                    + "returnDate is NULL;");
            while (myRs5.next()){
                if (myRs5.getInt("equipmentId")== Integer.parseInt(borrowId) 
                    && myRs5.getInt("userId") == Integer.parseInt(userNameValue)){
                    activateKey = 1;
                    userId = myRs5.getInt("userId");
                    dateEnd = myRs5.getString("dateEnd");
                    recordId = myRs5.getInt("recordId");
                    break;
                }
            }
            if (activateKey ==1){
                PreparedStatement updateBorrowRecord = myCon.prepareStatement ("Update borrowRecord set returnDate = "
                        + "current_timestamp() where recordId = ?;");
                updateBorrowRecord.setInt(1, recordId);
                int executeUpdate = updateBorrowRecord.executeUpdate(); 
                ResultSet myRs6 = myStmt.executeQuery("select equipmentId from equipmentmaster where currentStatus = 1");
                while (myRs6.next()){
                        PreparedStatement updateCurrentStatus = myCon.prepareStatement("UPDATE equipmentmaster SET currentStatus "
                                + "= 0 where equipmentID = ?;");
                        updateCurrentStatus.setString(1, borrowId);
                        int executeUpdate2 = updateCurrentStatus.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Succeed in returning");
                        PreparedStatement updateNumberOfBorrowedItems = myCon.prepareStatement("UPDATE usermaster SET "
                                + "numberOfBorrowedItems = numberOfBorrowedItems -1 where userId = ?;");
                        updateNumberOfBorrowedItems.setInt(1, userId);
                        updateNumberOfBorrowedItems.executeUpdate();
                        System.out.println(jCheckBox1.isSelected());
                        if (!(jTextFieldFeedback.getText()).equals("") && jCheckBox1.isSelected()){
                            PreparedStatement updateQuestionMaster = myCon.prepareStatement("insert into questionmaster (userId, "
                                    + "equipmentId, questionLocation, feedback, isDamage) values (?, ?, 0, ?, 1);");
                            updateQuestionMaster.setString(1, jTextFieldUserId.getText());
                            updateQuestionMaster.setString(2, jTextFieldBorrowId.getText());
                            updateQuestionMaster.setString(3, jTextFieldFeedback.getText());
                            updateQuestionMaster.executeUpdate();
                            System.out.println("inserted feedback");
                            PreparedStatement changeEquipmentStatusToDamage = myCon.prepareStatement("Update equipmentmaster set "
                                    + "equipmentStatus = 0 where equipmentId = ?;");
                            changeEquipmentStatusToDamage.setString(1, jTextFieldBorrowId.getText());
                            changeEquipmentStatusToDamage.executeUpdate();
                        }
                        else if (!(jTextFieldFeedback.getText()).equals("")){
                            PreparedStatement updateQuestionMaster = myCon.prepareStatement("insert into questionmaster (userId, "
                                    + "equipmentId, questionLocation, feedback) values (?, ?, 0, ?);");
                            updateQuestionMaster.setString(1, jTextFieldUserId.getText());
                            updateQuestionMaster.setString(2, jTextFieldBorrowId.getText());
                            updateQuestionMaster.setString(3, jTextFieldFeedback.getText());
                            updateQuestionMaster.executeUpdate();
                            System.out.println("inserted feedback");
                        }
                        else if (jCheckBox1.isSelected()){
                            PreparedStatement updateQuestionMaster = myCon.prepareStatement("insert into questionmaster (userId, "
                                    + "equipmentId, questionLocation, isDamaged) values (?, ?, 0, 1);");
                            updateQuestionMaster.setString(1, jTextFieldUserId.getText());
                            updateQuestionMaster.setString(2, jTextFieldBorrowId.getText());
                            updateQuestionMaster.executeUpdate();
                            System.out.println("inserted feedback");
                            PreparedStatement changeEquipmentStatusToDamage = myCon.prepareStatement("Update equipmentmaster set "
                                    + "equipmentStatus = 0 where equipmentId = ?;");
                            changeEquipmentStatusToDamage.setString(1, jTextFieldBorrowId.getText());
                            changeEquipmentStatusToDamage.executeUpdate();
                        }
                        break;
                }
                // Check if the item is returned late
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                Date date1 = new Date(System.currentTimeMillis());
                System.out.println(formatter.format(date1));
                if(formatter.format(date1).compareTo(dateEnd) > 0){
                    System.out.println("late");
                    PreparedStatement updateLateOrNot = myCon.prepareStatement("UPDATE borrowRecord SET lateOrNot = 1 where recordId = ?;");
                    updateLateOrNot.setInt(1, recordId);
                    updateLateOrNot.executeUpdate();
                    //find the number of dates late     cite from https://stackoverflow.com/questions/20165564/calculating-days-between-two-dates-with-java
                    java.util.Date date2 = formatter.parse(dateEnd);
                    long difference = Math.abs(date1.getTime() - date2.getTime());
                    long differenceDates = difference / (24 * 60 * 60 * 1000);
                    String dayDifference = Long.toString(differenceDates);
                    JOptionPane.showMessageDialog(null, "You returned " + dayDifference + " days late");
                    // mark bad record?
                    PreparedStatement updateLateRecord =myCon.prepareStatement("Update userMaster set lateRecord = lateRecord + 1 where userId = ?;");
                    updateLateRecord.setInt(1, Integer.parseInt(userNameValue));
                    updateLateRecord.executeUpdate();
                    PreparedStatement getLateRecord = myCon.prepareStatement("Select lateRecord from userMaster where userId = ?;");
                    getLateRecord.setInt(1, Integer.parseInt(userNameValue));
                    ResultSet myRs7 = getLateRecord.executeQuery();
                    int noOflateRecord =0;
                    while (myRs7.next()){
                        noOflateRecord = myRs7.getInt("lateRecord");
                        break;
                    }
                    if (noOflateRecord%2 == 0){
                        PreparedStatement bye =myCon.prepareStatement("Update userMaster set borrowAuthorization = 0 where userId = ?;");
                        bye.setInt(1, Integer.parseInt(userNameValue));
                        bye.executeUpdate();
                        JOptionPane.showMessageDialog(null, "You have a total of " + noOflateRecord +" late records. You won't have "
                                + "authorization in borrowing any more items. Please find responsible computer science teacher in Room 705 to get "
                                + "the authoriztion of borrowing");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "You have a total of " + noOflateRecord + " late records. "
                                + "If you return late one more time, you would only be be allowed to borrow "
                                + "after finding responsible computer sceince teacher to get the autorization of borrowing" );
                    }
                }
            }
             else{
                JOptionPane.showMessageDialog(null, "ReturnId cannot match with UserID");
            }
                }

                catch(Exception exc){
                    exc.printStackTrace();
                }
    }//GEN-LAST:event_jButtonBorrowActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        new firstPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jTextFieldFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFeedbackActionPerformed
        
    }//GEN-LAST:event_jTextFieldFeedbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returnBorrowPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returnBorrowPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returnBorrowPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returnBorrowPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returnBorrowPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBorrow;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextFieldBorrowId;
    private javax.swing.JTextField jTextFieldFeedback;
    private javax.swing.JTextField jTextFieldUserId;
    // End of variables declaration//GEN-END:variables
}
